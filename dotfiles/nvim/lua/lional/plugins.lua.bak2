local ensure_packer = function()
    local fn = vim.fn
    local install_path = fn.stdpath('data') .. '/site/pack/packer/start/packer.nvim'
    if fn.empty(fn.glob(install_path)) > 0 then
        fn.system({ 'git', 'clone', '--depth', '1', 'https://github.com/wbthomason/packer.nvim', install_path })
        vim.cmd [[packadd packer.nvim]]
        return true
    end
    return false
end

local packer_bootstrap = ensure_packer()

return require('packer').startup(function(use)
    -- Packer can manage itself
    use 'wbthomason/packer.nvim'

    -- treesitter highlighting
    use "nvim-treesitter/nvim-treesitter"

    use "p00f/nvim-ts-rainbow"

    use "lewis6991/impatient.nvim"

    -- colorschemes
    use "folke/tokyonight.nvim"
    use "projekt0n/github-nvim-theme"
    use "Mofiqul/dracula.nvim"
    use "ellisonleao/gruvbox.nvim"
    use 'nyoom-engineering/oxocarbon.nvim'
    use "catppuccin/nvim"
    use "lukas-reineke/onedark.nvim"
    use "sainnhe/sonokai"
    use "rose-pine/neovim"

    use "windwp/nvim-autopairs"

    -- commentary
    use {
        'numToStr/Comment.nvim',
        config = function()
            require('Comment').setup()
        end
    }
    use 'L3MON4D3/LuaSnip'
    use {
        'VonHeikemen/lsp-zero.nvim',
        branch = 'v1.x',
        require = {
            -- LSP Support
            { 'neovim/nvim-lspconfig' },
            { 'williamboman/mason.nvim' },
            { 'williamboman/mason-lspconfig.nvim' },

            -- Autocompletion
            { 'hrsh7th/nvim-cmp' },
            { 'hrsh7th/cmp-buffer' },
            { 'hrsh7th/cmp-path' },
            { 'saadparwaiz1/cmp_luasnip' },
            { 'hrsh7th/cmp-nvim-lsp' },
            { 'hrsh7th/cmp-nvim-lua' },

            -- Snippets
            { 'L3MON4D3/LuaSnip' },
            { 'rafamadriz/friendly-snippets' },
        }
    }

    -- Snip    -- formatting & linting
    use "jose-elias-alvarez/null-ls.nvim"
    use "jayp0521/mason-null-ls.nvim"

    -- Gitsigns && Git
    use "lewis6991/gitsigns.nvim"
    use "tpope/vim-fugitive"

    -- TELESCOPE fzf
    use({
        "nvim-telescope/telescope.nvim",
        tag = "0.1.0",
        require = { { "nvim-lua/plenary.nvim" } },
    })

    use "nvim-telescope/telescope-file-browser.nvim"

    -- Lua
    use {
        "ahmedkhalf/project.nvim",
        config = function()
            require("project_nvim").setup {
            }
        end
    }

    -- lua function that many plugins use
    use "nvim-lua/plenary.nvim"

    -- toggle Terminal in nvim
    use "akinsho/toggleterm.nvim"

    -- Toolbar
    use "nvim-lualine/lualine.nvim"

    -- Filexplorer
    use "nvim-tree/nvim-tree.lua"
    use "nvim-tree/nvim-web-devicons"
    use "LunarVim/Colorschemes"

    -- Undotree
    use "mbbill/undotree"

    -- bufferline
    use({ "akinsho/bufferline.nvim", tag = "v3.*", require = "nvim-tree/nvim-web-devicons" })

    -- Zenmode && Twillight
    use "folke/zen-mode.nvim"
    use "folke/twilight.nvim"

    -- Note taking
    use "lervag/vimtex"

    use({
        "vimwiki/vimwiki",
        config = function()
            vim.g.vimwiki_list = {
                {
                    path = "/home/vanhoa/Sync/Uni/vimwiki",
                    syntax = "markdown",
                    ext = ".md",
                },
            }
        end,
    })

    use "ElPiloto/telescope-vimwiki.nvim"

    -- markdown-preview
    use({
        "iamcco/markdown-preview.nvim",
        config = function()
            vim.fn["mkdp#util#install"]()
        end,
    })

    use 'github/copilot.vim'
    use 'ThePrimeagen/harpoon'
    use 'mfussenegger/nvim-jdtls'

    -- use({
    --     "folke/noice.nvim",
    --     config = function()
    --         require("noice").setup({
    --             -- add any options here
    --         })
    --     end,
    --
    --     require = {
    --         "MunifTanjim/nui.nvim",
    --         "rcarriga/nvim-notify",
    --     }
    -- })
    --
    if packer_bootstrap then
        require('packer').sync()
    end
end)
